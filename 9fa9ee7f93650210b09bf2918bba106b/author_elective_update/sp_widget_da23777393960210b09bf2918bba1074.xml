<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="DELETE">
        <category>custom</category>
        <client_script><![CDATA[function ($scope, $location, $rootScope, spUtil, $interpolate) {
	var c = this;

	this.data.filterText = "";
	this.showFilter = false;

	this.onClick = function($event, item, url, action) {
		$event.stopPropagation();
		$event.preventDefault();
		if (typeof url == "string") {
			var urlExp = $interpolate(url);
			url = urlExp(item);
			$location.url(url);
		} else if (url && typeof url == "object")
			$location.search(url);
		else {
			var evt = {};
			evt.url = url;
			evt.table = item.className;
			evt.sys_id = item.sys_id;
			evt.record = item;
			evt.rectangle_id = c.options.sys_id;
			evt.action = action;
			// put out the selection with simple list "sl_" prefix
			$location.search('sl_sys_id', evt.sys_id);
			$location.search('sl_table', evt.table);
			$location.search('spa', 1); // spa means "I've got this"
			$rootScope.$broadcast('$sp.list.click', evt);
		}
	};

	if (c.options.table && c.options.disable_record_watcher != 'true')
		spUtil.recordWatch($scope, c.options.table, c.options.filter);

	this.getMaxShownLabel = function(maxEntries, totalCount) {
		if (totalCount == c.data.maxCount)
			return "${First [0] of more than [1]}".replace('[0]', maxEntries).replace('[1]', totalCount);

		return "${First [0] of [1]}".replace('[0]', maxEntries).replace('[1]', totalCount);
	};

	this.seeAllPage = c.options.list_page_dv || 'list';
	this.targetPageID = (c.options.sp_page) ? "&target_page_id=" + c.options.sp_page : "";

	c.getMaxHeight = function() {
		return c.options.panel_body_height || 'none';
	};

	c.getActionColor = function(action) {
		return "text-" + action.color;
	};

	c.update = function update() {
			c.server.update();
	}

	c.toggleFilter = function() {
		c.showFilter = !c.showFilter;
	}

}]]></client_script>
        <controller_as>c</controller_as>
        <css>/* Improved Panel Styling */
.panel {
    position: relative;
    border: 1px solid #ddd; /* Add a subtle border */
    border-radius: 5px; /* Add rounded corners */
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); /* Add a shadow for depth */
    margin-bottom: 20px; /* Increase margin for spacing between panels */
    overflow: hidden; /* Prevent overflow issues */
}

.panel-heading i {
    cursor: pointer;
    position: absolute;
    padding: 10px;
    top: 10px; /* Adjust top position for better alignment */
    right: 10px; /* Adjust right position for better alignment */
    transition: color 0.3s; /* Smooth color transition */
}

.panel-heading i:hover {
    color: #007bff; /* Change color on hover */
}

.disabled-filter {
    color: #A0A0A0;
}

/* Improved List Group Item Animation */
.list-group-item.ng-enter {
    transition: background-color 0.5s, transform 0.5s; /* Smooth background color and transform transition */
    background-color: #f8f9fa; /* Lighter background color */
    transform: scale(1.05); /* Add a subtle scaling effect */
}

.list-group-item.ng-enter-active {
    background-color: #fff; /* Change to white background */
    transform: scale(1); /* Revert scaling effect */
}

.hide-x-overflow {
    overflow-x: hidden;
}

.translated-html &gt; p {
    margin: 0; /* Remove default margin */
    padding: 0; /* Remove default padding */
}

/* Improved Image Styling */
img {
    max-width: 100%; /* Ensure images are responsive */
    height: auto; /* Maintain aspect ratio */
}

.img-sm {
    max-height: 40px;
    max-width: 40px;
}

/* Improved Filter Box Styling */
.filter-box {
    margin-top: 20px; /* Increase top margin for spacing */
}

/* Improved Panel Footer Styling */
.panel-footer {
    display: flex; /* Use flexbox for layout */
    align-items: center; /* Align items vertically */
    justify-content: space-between; /* Space items evenly */
    padding: 15px; /* Add padding for spacing */
    background-color: #f8f9fa; /* Light background color */
    border-top: 1px solid #ddd; /* Add border for separation */
}

.panel-footer .number-shown-label {
    font-size: 16px;
    margin: 0; /* Remove default margin */
}

.panel-footer a {
    color: #007bff; /* Link color */
    text-decoration: none; /* Remove underline */
    transition: color 0.3s; /* Smooth color transition */
}

.panel-footer a:hover {
    color: #0056b3; /* Change color on hover */
}

/* Adjustments for FontAwesome Icons */
.panel-title .fa {
    margin-right: 8px; /* Add space between icon and text */
}
</css>
        <data_table>sp_instance_vlist</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list>table,filter,maximum_entries,display_field,color,size,glyph,sp_page</field_list>
        <has_preview>false</has_preview>
        <id>simple_list_lms</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {  }]]></link>
        <name>Simple List LMS</name>
        <option_schema>[{"name":"always_show","section":"Behavior","label":"Show even when empty","type":"boolean"},{"name":"panel_body_height","section":"Presentation","label":"List body height","type":"string"},{"name":"image_field","section":"Presentation","label":"Image field","type":"field_name"},{"name":"secondary_fields","section":"Data","label":"Secondary fields","type":"field_list"},{"name":"rounded_images","section":"Presentation","label":"Rounded images","type":"boolean"},{"displayValue":"Page","name":"list_page","section":"Data","label":"List page","type":"reference","value":"sp_page","ed":{"reference":"sp_page"}},{"name":"hide_footer","section":"Presentation","label":"Hide Footer","type":"boolean"},{"displayValue":"UI View","hint":"View to use when target page is a form","name":"view","section":"Behavior","label":"View","type":"reference","value":"sys_ui_view","ed":{"reference":"sys_ui_view"}},{"hint":"If checked, Simple List will not automatically updated based on changes to the filtered records","name":"disable_record_watcher","section":"Behavior","label":"Disable record watcher","type":"boolean"},{"name":"filter_acls","section":"Data","default_value":"false","label":"Enforce field-level Read ACLs on Filter query terms (may alter the query for unprivileged users)","type":"boolean"}]</option_schema>
        <public>true</public>
        <roles/>
        <script><![CDATA[(function () {
	data.filterMsg = gs.getMessage("Filter...");
	data.viewAllMsg = gs.getMessage("View all");
	if (gs.nil(options.hide_footer))
	    options.hide_footer = false;
	options.hide_footer = (options.hide_footer == "true" || options.hide_footer == true);
	options.table = $sp.getParameter('t') || options.table;
	if (!options.table)
		return;

	if (!gs.getSession().isLoggedIn() && !new SNCACLUtil().hasPublicAccess(options.table)) {
		gs.warn("Deny access to table which is not public: " + options.table);
		data.isValid = false;
		return;
	}

	var gr = new GlideRecordSecure(options.table); // does ACL checking for us
	if (!gr.isValid()) {
		data.isValid = false;
		return;
	} else
		data.isValid = true;
	// grTemp is used to check isValidField since using GlideRecordSecure fails for date/time fields
	var grTemp = new GlideRecord(options.table);
	if (options.filter_acls == "true")
		gr = $sp.addQueryString(gr, options.filter);
	else
		gr.addEncodedQuery(options.filter);
	options.title = options.title || gr.getPlural();
	options.display_field = $sp.getParameter('f') || options.display_field;
	if (!options.display_field || !grTemp.isValidField(options.display_field))
		options.display_field = gr.getDisplayName();

	if (input && input.filterText)
		gr.addEncodedQuery(options.display_field + "LIKE" + input.filterText)

	options.title = options.title || gr.getPlural();
	options.secondary_fields = options.secondary_fields || "";
	options.secondary_fields = options.secondary_fields.split(",");
	if (!options.order_by || !grTemp.isValidField(options.order_by))
		options.order_by = options.display_field;

	// Set ID of sp_page from option schema
	if (options.list_page) {
		var sp_page = GlideRecord('sp_page');
		if (sp_page.get(options.list_page))
			options.list_page_dv = sp_page.getDisplayValue('id');
	}

	// redo query with limit
	if (options.order_direction == "asc")
		gr.orderBy(options.order_by);
	else
		gr.orderByDesc(options.order_by);

	data.maxCount = 500;
	gr.setLimit(data.maxCount);
	gr.query();

	data.count = gr.getRowCount();
	data.actions = getActions();
	data.list = [];
	var recordIdx = 0;
	while (gr.next()) {
		if (options.maximum_entries && recordIdx == options.maximum_entries)
			break;

		var record = {};
		if (data.actions.length > 0) {
			var fields = gr.getFields();
			for (var i = 0; i < fields.size(); i++) {
				var glideElement = fields.get(i);
				var name = glideElement.getName();
				if (name.indexOf("sys_") == -1)
					record[name] = gr.getValue(name);
			}
		}

		record.sys_id = gr.getValue('sys_id');
		record.className = gr.getRecordClassName();
		if (options.image_field) {
			record.image_field = gr.getDisplayValue(options.image_field);
			if (!record.image_field)
				record.image_field = "noimage.pngx";
		}

		if (options.display_field)
			record.display_field = getField(gr, options.display_field);

		record.secondary_fields = [];
		options.secondary_fields.forEach(function(f) {
			record.secondary_fields.push(getField(gr, f));
		});

		if (options.sp_page) {
			var view = "sp";
			if (options.view) {
				var viewGR = new GlideRecord("sys_ui_view");
				viewGR.get(options.view);
				view = viewGR.getValue("name");
			}
			record.url = {id: options.sp_page, table: record.className, sys_id: record.sys_id, view: view};
		} else if (options.url != '')
			record.url = options.url;
		else
			record.url = null;

		data.list.push(record);
		recordIdx++;
	}

	function getField(gr, name) {
		var f = {};
		f.display_value = gr.getDisplayValue(name);
		f.value = gr.getValue(name);
		var ge = gr.getElement(name);
			if (ge == null)
				return f;

		f.type = ge.getED().getInternalType();
		if (f.type == "glide_date_time")
			f.isFuture = gs.dateDiff(gr.getValue(name), gs.nowNoTZ(), true) < 0;
		else if (f.type == "glide_date")
			f.isFuture = gs.dateDiff(gr.getValue(name), gs.now(), true) < 0;
		f.label = ge.getLabel();
		return f;
	}

	function getActions() {
		return JSON.parse($sp.getSPVlistActions($sp.getValue("sys_id")));
	}

})()]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>pranav.k</sys_created_by>
        <sys_created_on>2024-05-28 10:08:34</sys_created_on>
        <sys_id>da23777393960210b09bf2918bba1074</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_name>Simple List LMS</sys_name>
        <sys_package display_value="LMS Application" source="x_1383177_lms_app">9fa9ee7f93650210b09bf2918bba106b</sys_package>
        <sys_policy/>
        <sys_scope display_value="LMS Application">9fa9ee7f93650210b09bf2918bba106b</sys_scope>
        <sys_update_name>sp_widget_da23777393960210b09bf2918bba1074</sys_update_name>
        <sys_updated_by>pranav.k</sys_updated_by>
        <sys_updated_on>2024-05-28 10:13:31</sys_updated_on>
        <template><![CDATA[<div class="panel panel-{{::c.options.color}} b" ng-if="c.data.isValid && (c.options.always_show == 'true' || c.options.always_show == true || c.data.filterText || c.data.list.length)">
  <div class="panel-heading" ng-if="::!c.options.hide_header">
    <h3 class="h4 panel-title">
      <span ng-if="c.options.glyph">
        <fa name="{{::c.options.glyph}}"></fa>
      </span>{{::c.options.title}}</h3>
    <!-- <i class="fa fa-filter" ng-click="c.toggleFilter()" ng-class="{'disabled-filter': !c.showFilter}"></i> -->
    <div ng-show="c.showFilter">
      <input aria-label="${Filter}" ng-model="c.data.filterText" ng-model-options="{debounce: 300}" sn-focus="c.showFilter" placeholder="{{::data.filterMsg}}" ng-change="c.update()" class="form-control input-sm filter-box">
    </div>
  </div>
  <ul class="list-group hide-x-overflow" ng-style="::{maxHeight: c.getMaxHeight()}" style="overflow-y: auto;" ng-if="c.data.list.length > 0">
    <li ng-repeat="item in c.data.list track by item.sys_id" class="list-group-item">
      <a ng-if="action.glyph || c.options.image_field || (item.display_field.type == 'translated_html' ? item.display_field.value : item.display_field.display_value)" ng-click="c.onClick($event, item, item.url, {})" href="javascript:void(0)" oncontextmenu="return false;">
        <span ng-repeat="action in c.data.actions" href="" ng-click="c.onClick($event, item, action.url, action)" ng-if="action.glyph"
              class="list-action l-h-40 pull-right">
          <fa name="{{action.glyph}}" ng-class="c.getActionColor(action)"></fa>
        </span>
        <span ng-if="c.options.image_field" class="pull-left m-r"
              ng-class="{'avatar': c.options.rounded_images, 'thumb-sm': c.options.rounded_images}">
          <img ng-src="{{item.image_field}}" alt="..." class="img-sm" ng-class="{'img-circle': c.options.rounded_images}">
        </span>
          <div ng-switch on="item.display_field.type" ng-class="{'l-h-40': !item.secondary_fields.length}">
            <span class="translated-html" ng-switch-when="translated_html" ng-bind-html="item.display_field.value"></span>
            <div ng-switch-default>{{item.display_field.display_value}}</div>
          </div>
	  </a>
	    <div>
          <small class="text-muted" ng-repeat="f in item.secondary_fields">
            <span ng-if="!$first"> • </span>
            <span ng-switch="f.type" title="{{::f.label}}">
              <span ng-switch-when="glide_date">
                <span ng-if="!f.isFuture"> <sn-day-ago date="::f.value"></sn-day-ago> </span>
                <span ng-if="f.isFuture"> {{f.display_value}}</span>
              </span>
              <span ng-switch-when="glide_date_time">
                <span ng-if="!f.isFuture"> <sn-time-ago timestamp="::f.value"></sn-time-ago></span>
                <span ng-if="f.isFuture"> {{f.display_value}}</span>
              </span>
              <span ng-switch-default="">{{f.display_value}}</span>
            </span>
          </small>
        </div>
    </li>
  </ul>
  <div ng-if="!c.data.list.length" class="list-group-item">
     ${No records found}
  </div>
  <div class="panel-footer" ng-if="!c.options.hide_footer && c.options.maximum_entries && c.data.count > c.options.maximum_entries">
    <div class="h4 number-shown-label">{{c.getMaxShownLabel(c.options.maximum_entries, c.data.count)}}</div>
    <a class="pull-right" ng-href="?id={{c.seeAllPage}}&table={{c.options.table}}&filter={{c.options.filter}}{{c.targetPageID}}" aria-label="{{::data.viewAllMsg}} - {{::c.options.title}}">${View all}</a>
  </div>
</div>]]></template>
    </sp_widget>
    <sys_update_version action="INSERT_OR_UPDATE">
        <action>DELETE</action>
        <application display_value="LMS Application">9fa9ee7f93650210b09bf2918bba106b</application>
        <file_path/>
        <instance_id>96a148cddbee3d1802d9172913961973</instance_id>
        <instance_name>dev211199</instance_name>
        <name>sp_widget_da23777393960210b09bf2918bba1074</name>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sp_widget"&gt;&lt;sp_widget action="INSERT_OR_UPDATE"&gt;&lt;category&gt;custom&lt;/category&gt;&lt;client_script&gt;&lt;![CDATA[function ($scope, $location, $rootScope, spUtil, $interpolate) {
	var c = this;

	this.data.filterText = "";
	this.showFilter = false;

	this.onClick = function($event, item, url, action) {
		$event.stopPropagation();
		$event.preventDefault();
		if (typeof url == "string") {
			var urlExp = $interpolate(url);
			url = urlExp(item);
			$location.url(url);
		} else if (url &amp;&amp; typeof url == "object")
			$location.search(url);
		else {
			var evt = {};
			evt.url = url;
			evt.table = item.className;
			evt.sys_id = item.sys_id;
			evt.record = item;
			evt.rectangle_id = c.options.sys_id;
			evt.action = action;
			// put out the selection with simple list "sl_" prefix
			$location.search('sl_sys_id', evt.sys_id);
			$location.search('sl_table', evt.table);
			$location.search('spa', 1); // spa means "I've got this"
			$rootScope.$broadcast('$sp.list.click', evt);
		}
	};

	if (c.options.table &amp;&amp; c.options.disable_record_watcher != 'true')
		spUtil.recordWatch($scope, c.options.table, c.options.filter);

	this.getMaxShownLabel = function(maxEntries, totalCount) {
		if (totalCount == c.data.maxCount)
			return "${First [0] of more than [1]}".replace('[0]', maxEntries).replace('[1]', totalCount);

		return "${First [0] of [1]}".replace('[0]', maxEntries).replace('[1]', totalCount);
	};

	this.seeAllPage = c.options.list_page_dv || 'list';
	this.targetPageID = (c.options.sp_page) ? "&amp;target_page_id=" + c.options.sp_page : "";

	c.getMaxHeight = function() {
		return c.options.panel_body_height || 'none';
	};

	c.getActionColor = function(action) {
		return "text-" + action.color;
	};

	c.update = function update() {
			c.server.update();
	}

	c.toggleFilter = function() {
		c.showFilter = !c.showFilter;
	}

}]]&gt;&lt;/client_script&gt;&lt;controller_as&gt;c&lt;/controller_as&gt;&lt;css&gt;/* Improved Panel Styling */
.panel {
    position: relative;
    border: 1px solid #ddd; /* Add a subtle border */
    border-radius: 5px; /* Add rounded corners */
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); /* Add a shadow for depth */
    margin-bottom: 20px; /* Increase margin for spacing between panels */
    overflow: hidden; /* Prevent overflow issues */
}

.panel-heading i {
    cursor: pointer;
    position: absolute;
    padding: 10px;
    top: 10px; /* Adjust top position for better alignment */
    right: 10px; /* Adjust right position for better alignment */
    transition: color 0.3s; /* Smooth color transition */
}

.panel-heading i:hover {
    color: #007bff; /* Change color on hover */
}

.disabled-filter {
    color: #A0A0A0;
}

/* Improved List Group Item Animation */
.list-group-item.ng-enter {
    transition: background-color 0.5s, transform 0.5s; /* Smooth background color and transform transition */
    background-color: #f8f9fa; /* Lighter background color */
    transform: scale(1.05); /* Add a subtle scaling effect */
}

.list-group-item.ng-enter-active {
    background-color: #fff; /* Change to white background */
    transform: scale(1); /* Revert scaling effect */
}

.hide-x-overflow {
    overflow-x: hidden;
}

.translated-html &amp;gt; p {
    margin: 0; /* Remove default margin */
    padding: 0; /* Remove default padding */
}

/* Improved Image Styling */
img {
    max-width: 100%; /* Ensure images are responsive */
    height: auto; /* Maintain aspect ratio */
}

.img-sm {
    max-height: 40px;
    max-width: 40px;
}

/* Improved Filter Box Styling */
.filter-box {
    margin-top: 20px; /* Increase top margin for spacing */
}

/* Improved Panel Footer Styling */
.panel-footer {
    display: flex; /* Use flexbox for layout */
    align-items: center; /* Align items vertically */
    justify-content: space-between; /* Space items evenly */
    padding: 15px; /* Add padding for spacing */
    background-color: #f8f9fa; /* Light background color */
    border-top: 1px solid #ddd; /* Add border for separation */
}

.panel-footer .number-shown-label {
    font-size: 16px;
    margin: 0; /* Remove default margin */
}

.panel-footer a {
    color: #007bff; /* Link color */
    text-decoration: none; /* Remove underline */
    transition: color 0.3s; /* Smooth color transition */
}

.panel-footer a:hover {
    color: #0056b3; /* Change color on hover */
}

/* Adjustments for FontAwesome Icons */
.panel-title .fa {
    margin-right: 8px; /* Add space between icon and text */
}
&lt;/css&gt;&lt;data_table&gt;sp_instance_vlist&lt;/data_table&gt;&lt;demo_data/&gt;&lt;description/&gt;&lt;docs/&gt;&lt;field_list&gt;table,filter,maximum_entries,display_field,color,size,glyph,sp_page&lt;/field_list&gt;&lt;has_preview&gt;false&lt;/has_preview&gt;&lt;id&gt;simple_list_lms&lt;/id&gt;&lt;internal&gt;false&lt;/internal&gt;&lt;link&gt;&lt;![CDATA[function link(scope, element, attrs, controller) {  }]]&gt;&lt;/link&gt;&lt;name&gt;Simple List LMS&lt;/name&gt;&lt;option_schema&gt;[{"name":"always_show","section":"Behavior","label":"Show even when empty","type":"boolean"},{"name":"panel_body_height","section":"Presentation","label":"List body height","type":"string"},{"name":"image_field","section":"Presentation","label":"Image field","type":"field_name"},{"name":"secondary_fields","section":"Data","label":"Secondary fields","type":"field_list"},{"name":"rounded_images","section":"Presentation","label":"Rounded images","type":"boolean"},{"displayValue":"Page","name":"list_page","section":"Data","label":"List page","type":"reference","value":"sp_page","ed":{"reference":"sp_page"}},{"name":"hide_footer","section":"Presentation","label":"Hide Footer","type":"boolean"},{"displayValue":"UI View","hint":"View to use when target page is a form","name":"view","section":"Behavior","label":"View","type":"reference","value":"sys_ui_view","ed":{"reference":"sys_ui_view"}},{"hint":"If checked, Simple List will not automatically updated based on changes to the filtered records","name":"disable_record_watcher","section":"Behavior","label":"Disable record watcher","type":"boolean"},{"name":"filter_acls","section":"Data","default_value":"false","label":"Enforce field-level Read ACLs on Filter query terms (may alter the query for unprivileged users)","type":"boolean"}]&lt;/option_schema&gt;&lt;public&gt;true&lt;/public&gt;&lt;roles/&gt;&lt;script&gt;&lt;![CDATA[(function () {
	data.filterMsg = gs.getMessage("Filter...");
	data.viewAllMsg = gs.getMessage("View all");
	if (gs.nil(options.hide_footer))
	    options.hide_footer = false;
	options.hide_footer = (options.hide_footer == "true" || options.hide_footer == true);
	options.table = $sp.getParameter('t') || options.table;
	if (!options.table)
		return;

	if (!gs.getSession().isLoggedIn() &amp;&amp; !new SNCACLUtil().hasPublicAccess(options.table)) {
		gs.warn("Deny access to table which is not public: " + options.table);
		data.isValid = false;
		return;
	}

	var gr = new GlideRecordSecure(options.table); // does ACL checking for us
	if (!gr.isValid()) {
		data.isValid = false;
		return;
	} else
		data.isValid = true;
	// grTemp is used to check isValidField since using GlideRecordSecure fails for date/time fields
	var grTemp = new GlideRecord(options.table);
	if (options.filter_acls == "true")
		gr = $sp.addQueryString(gr, options.filter);
	else
		gr.addEncodedQuery(options.filter);
	options.title = options.title || gr.getPlural();
	options.display_field = $sp.getParameter('f') || options.display_field;
	if (!options.display_field || !grTemp.isValidField(options.display_field))
		options.display_field = gr.getDisplayName();

	if (input &amp;&amp; input.filterText)
		gr.addEncodedQuery(options.display_field + "LIKE" + input.filterText)

	options.title = options.title || gr.getPlural();
	options.secondary_fields = options.secondary_fields || "";
	options.secondary_fields = options.secondary_fields.split(",");
	if (!options.order_by || !grTemp.isValidField(options.order_by))
		options.order_by = options.display_field;

	// Set ID of sp_page from option schema
	if (options.list_page) {
		var sp_page = GlideRecord('sp_page');
		if (sp_page.get(options.list_page))
			options.list_page_dv = sp_page.getDisplayValue('id');
	}

	// redo query with limit
	if (options.order_direction == "asc")
		gr.orderBy(options.order_by);
	else
		gr.orderByDesc(options.order_by);

	data.maxCount = 500;
	gr.setLimit(data.maxCount);
	gr.query();

	data.count = gr.getRowCount();
	data.actions = getActions();
	data.list = [];
	var recordIdx = 0;
	while (gr.next()) {
		if (options.maximum_entries &amp;&amp; recordIdx == options.maximum_entries)
			break;

		var record = {};
		if (data.actions.length &gt; 0) {
			var fields = gr.getFields();
			for (var i = 0; i &lt; fields.size(); i++) {
				var glideElement = fields.get(i);
				var name = glideElement.getName();
				if (name.indexOf("sys_") == -1)
					record[name] = gr.getValue(name);
			}
		}

		record.sys_id = gr.getValue('sys_id');
		record.className = gr.getRecordClassName();
		if (options.image_field) {
			record.image_field = gr.getDisplayValue(options.image_field);
			if (!record.image_field)
				record.image_field = "noimage.pngx";
		}

		if (options.display_field)
			record.display_field = getField(gr, options.display_field);

		record.secondary_fields = [];
		options.secondary_fields.forEach(function(f) {
			record.secondary_fields.push(getField(gr, f));
		});

		if (options.sp_page) {
			var view = "sp";
			if (options.view) {
				var viewGR = new GlideRecord("sys_ui_view");
				viewGR.get(options.view);
				view = viewGR.getValue("name");
			}
			record.url = {id: options.sp_page, table: record.className, sys_id: record.sys_id, view: view};
		} else if (options.url != '')
			record.url = options.url;
		else
			record.url = null;

		data.list.push(record);
		recordIdx++;
	}

	function getField(gr, name) {
		var f = {};
		f.display_value = gr.getDisplayValue(name);
		f.value = gr.getValue(name);
		var ge = gr.getElement(name);
			if (ge == null)
				return f;

		f.type = ge.getED().getInternalType();
		if (f.type == "glide_date_time")
			f.isFuture = gs.dateDiff(gr.getValue(name), gs.nowNoTZ(), true) &lt; 0;
		else if (f.type == "glide_date")
			f.isFuture = gs.dateDiff(gr.getValue(name), gs.now(), true) &lt; 0;
		f.label = ge.getLabel();
		return f;
	}

	function getActions() {
		return JSON.parse($sp.getSPVlistActions($sp.getValue("sys_id")));
	}

})()]]&gt;&lt;/script&gt;&lt;servicenow&gt;false&lt;/servicenow&gt;&lt;sys_class_name&gt;sp_widget&lt;/sys_class_name&gt;&lt;sys_created_by&gt;pranav.k&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2024-05-28 10:08:34&lt;/sys_created_on&gt;&lt;sys_id&gt;da23777393960210b09bf2918bba1074&lt;/sys_id&gt;&lt;sys_mod_count&gt;1&lt;/sys_mod_count&gt;&lt;sys_name&gt;Simple List LMS&lt;/sys_name&gt;&lt;sys_package display_value="LMS Application" source="x_1383177_lms_app"&gt;9fa9ee7f93650210b09bf2918bba106b&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="LMS Application"&gt;9fa9ee7f93650210b09bf2918bba106b&lt;/sys_scope&gt;&lt;sys_update_name&gt;sp_widget_da23777393960210b09bf2918bba1074&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;pranav.k&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2024-05-28 10:13:31&lt;/sys_updated_on&gt;&lt;template&gt;&lt;![CDATA[&lt;div class="panel panel-{{::c.options.color}} b" ng-if="c.data.isValid &amp;&amp; (c.options.always_show == 'true' || c.options.always_show == true || c.data.filterText || c.data.list.length)"&gt;
  &lt;div class="panel-heading" ng-if="::!c.options.hide_header"&gt;
    &lt;h3 class="h4 panel-title"&gt;
      &lt;span ng-if="c.options.glyph"&gt;
        &lt;fa name="{{::c.options.glyph}}"&gt;&lt;/fa&gt;
      &lt;/span&gt;{{::c.options.title}}&lt;/h3&gt;
    &lt;!-- &lt;i class="fa fa-filter" ng-click="c.toggleFilter()" ng-class="{'disabled-filter': !c.showFilter}"&gt;&lt;/i&gt; --&gt;
    &lt;div ng-show="c.showFilter"&gt;
      &lt;input aria-label="${Filter}" ng-model="c.data.filterText" ng-model-options="{debounce: 300}" sn-focus="c.showFilter" placeholder="{{::data.filterMsg}}" ng-change="c.update()" class="form-control input-sm filter-box"&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;ul class="list-group hide-x-overflow" ng-style="::{maxHeight: c.getMaxHeight()}" style="overflow-y: auto;" ng-if="c.data.list.length &gt; 0"&gt;
    &lt;li ng-repeat="item in c.data.list track by item.sys_id" class="list-group-item"&gt;
      &lt;a ng-if="action.glyph || c.options.image_field || (item.display_field.type == 'translated_html' ? item.display_field.value : item.display_field.display_value)" ng-click="c.onClick($event, item, item.url, {})" href="javascript:void(0)" oncontextmenu="return false;"&gt;
        &lt;span ng-repeat="action in c.data.actions" href="" ng-click="c.onClick($event, item, action.url, action)" ng-if="action.glyph"
              class="list-action l-h-40 pull-right"&gt;
          &lt;fa name="{{action.glyph}}" ng-class="c.getActionColor(action)"&gt;&lt;/fa&gt;
        &lt;/span&gt;
        &lt;span ng-if="c.options.image_field" class="pull-left m-r"
              ng-class="{'avatar': c.options.rounded_images, 'thumb-sm': c.options.rounded_images}"&gt;
          &lt;img ng-src="{{item.image_field}}" alt="..." class="img-sm" ng-class="{'img-circle': c.options.rounded_images}"&gt;
        &lt;/span&gt;
          &lt;div ng-switch on="item.display_field.type" ng-class="{'l-h-40': !item.secondary_fields.length}"&gt;
            &lt;span class="translated-html" ng-switch-when="translated_html" ng-bind-html="item.display_field.value"&gt;&lt;/span&gt;
            &lt;div ng-switch-default&gt;{{item.display_field.display_value}}&lt;/div&gt;
          &lt;/div&gt;
	  &lt;/a&gt;
	    &lt;div&gt;
          &lt;small class="text-muted" ng-repeat="f in item.secondary_fields"&gt;
            &lt;span ng-if="!$first"&gt; • &lt;/span&gt;
            &lt;span ng-switch="f.type" title="{{::f.label}}"&gt;
              &lt;span ng-switch-when="glide_date"&gt;
                &lt;span ng-if="!f.isFuture"&gt; &lt;sn-day-ago date="::f.value"&gt;&lt;/sn-day-ago&gt; &lt;/span&gt;
                &lt;span ng-if="f.isFuture"&gt; {{f.display_value}}&lt;/span&gt;
              &lt;/span&gt;
              &lt;span ng-switch-when="glide_date_time"&gt;
                &lt;span ng-if="!f.isFuture"&gt; &lt;sn-time-ago timestamp="::f.value"&gt;&lt;/sn-time-ago&gt;&lt;/span&gt;
                &lt;span ng-if="f.isFuture"&gt; {{f.display_value}}&lt;/span&gt;
              &lt;/span&gt;
              &lt;span ng-switch-default=""&gt;{{f.display_value}}&lt;/span&gt;
            &lt;/span&gt;
          &lt;/small&gt;
        &lt;/div&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
  &lt;div ng-if="!c.data.list.length" class="list-group-item"&gt;
     ${No records found}
  &lt;/div&gt;
  &lt;div class="panel-footer" ng-if="!c.options.hide_footer &amp;&amp; c.options.maximum_entries &amp;&amp; c.data.count &gt; c.options.maximum_entries"&gt;
    &lt;div class="h4 number-shown-label"&gt;{{c.getMaxShownLabel(c.options.maximum_entries, c.data.count)}}&lt;/div&gt;
    &lt;a class="pull-right" ng-href="?id={{c.seeAllPage}}&amp;table={{c.options.table}}&amp;filter={{c.options.filter}}{{c.targetPageID}}" aria-label="{{::data.viewAllMsg}} - {{::c.options.title}}"&gt;${View all}&lt;/a&gt;
  &lt;/div&gt;
&lt;/div&gt;]]&gt;&lt;/template&gt;&lt;/sp_widget&gt;&lt;/record_update&gt;</payload>
        <payload_hash>1326317347</payload_hash>
        <record_name>Simple List LMS</record_name>
        <reverted_from/>
        <source>c6488b3f93920210b09bf2918bba10bc</source>
        <source_table>sys_update_set</source_table>
        <state>previous</state>
        <sys_created_by>pranav.k</sys_created_by>
        <sys_created_on>2024-05-28 10:13:31</sys_created_on>
        <sys_id>b64473b393960210b09bf2918bba1081</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_recorded_at>18fbeb0d5720000001</sys_recorded_at>
        <sys_updated_by>pranav.k</sys_updated_by>
        <sys_updated_on>2024-05-28 10:13:31</sys_updated_on>
        <type>Widget</type>
        <update_guid>7e4473b3369602106e59c470b6a87680</update_guid>
        <update_guid_history>7e4473b3369602106e59c470b6a87680:1326317347,1a237b73d79602108866556687d7ce7e:-1686759290</update_guid_history>
    </sys_update_version>
    <sys_metadata_delete action="INSERT_OR_UPDATE">
        <sys_audit_delete display_value="Simple List LMS">16e57f3793960210b09bf2918bba10df</sys_audit_delete>
        <sys_class_name>sys_metadata_delete</sys_class_name>
        <sys_created_by>pranav.k</sys_created_by>
        <sys_created_on>2024-05-28 10:20:34</sys_created_on>
        <sys_db_object display_value="" name="sp_widget">sp_widget</sys_db_object>
        <sys_id>54547bb53b8b49149745c893b3115d81</sys_id>
        <sys_metadata>da23777393960210b09bf2918bba1074</sys_metadata>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Simple List LMS</sys_name>
        <sys_package display_value="LMS Application" source="x_1383177_lms_app">9fa9ee7f93650210b09bf2918bba106b</sys_package>
        <sys_parent/>
        <sys_policy/>
        <sys_scope display_value="LMS Application">9fa9ee7f93650210b09bf2918bba106b</sys_scope>
        <sys_scope_delete display_value="">1cee37d185a6415a844cb79c3c6b7bb1</sys_scope_delete>
        <sys_update_name>sp_widget_da23777393960210b09bf2918bba1074</sys_update_name>
        <sys_update_version display_value="sp_widget_da23777393960210b09bf2918bba1074">b64473b393960210b09bf2918bba1081</sys_update_version>
        <sys_updated_by>pranav.k</sys_updated_by>
        <sys_updated_on>2024-05-28 10:20:34</sys_updated_on>
    </sys_metadata_delete>
</record_update>
