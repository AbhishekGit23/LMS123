<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="DELETE">
        <access>public</access>
        <active>true</active>
        <api_name>x_1383177_lms_app.AylienTextAnalysis</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description/>
        <name>AylienTextAnalysis</name>
        <script><![CDATA[var AylienTextAnalysis = Class.create();
AylienTextAnalysis.prototype = {
    initialize: function() {
    },

    getTags: function(detailed_description) {
        // Define the endpoint and your API credentials
        var url = 'https://api.aylien.com/api/v1/concepts';
        var appId = '87b0b28f'; // Replace with your Aylien App ID
        var appKey = '548dc3cfeabc7eb9c21d3d7966a94808'; // Replace with your Aylien App Key

        var requestBody = {
            text: detailed_description
        };

        var headers = {
            'X-AYLIEN-TextAPI-Application-ID': appId,
            'X-AYLIEN-TextAPI-Application-Key': appKey,
            'Content-Type': 'application/json'
        };

        var client = new sn_ws.RESTMessageV2();
        client.setEndpoint(url);
        client.setHttpMethod('post');
        client.setRequestHeader('X-AYLIEN-TextAPI-Application-ID', appId);
        client.setRequestHeader('X-AYLIEN-TextAPI-Application-Key', appKey);
        client.setRequestHeader('Content-Type', 'application/json');
        client.setRequestBody(JSON.stringify(requestBody));

        var response = client.execute();
        var responseBody = response.getBody();
        var httpStatus = response.getStatusCode();

        if (httpStatus == 200) {
            var responseData = JSON.parse(responseBody);
            // Extract keywords or tags from the response data
            var tag = this.extractTags(responseData);
            return tag;
        } else {
            gs.error('Aylien API request failed: ' + httpStatus + ' ' + responseBody);
            return null;
        }
    },

    extractTags: function(responseData) {
        var tag = [];
        // Assuming the API returns a list of concepts
        if (responseData && responseData.concepts) {
            for (var concept in responseData.concepts) {
                if (responseData.concepts.hasOwnProperty(concept)) {
                    tag.push(concept);
                }
            }
        }
        return tag.join(','); // Join tags by comma or any other delimiter
    },

    type: 'AylienTextAnalysis'
};
]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>pranav.k</sys_created_by>
        <sys_created_on>2024-05-21 06:24:43</sys_created_on>
        <sys_id>5a9bb62d931a0a10b09bf2918bba10a2</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>AylienTextAnalysis</sys_name>
        <sys_package display_value="LMS Application" source="x_1383177_lms_app">9fa9ee7f93650210b09bf2918bba106b</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="LMS Application">9fa9ee7f93650210b09bf2918bba106b</sys_scope>
        <sys_update_name>sys_script_include_5a9bb62d931a0a10b09bf2918bba10a2</sys_update_name>
        <sys_updated_by>pranav.k</sys_updated_by>
        <sys_updated_on>2024-05-21 06:24:43</sys_updated_on>
    </sys_script_include>
    <sys_update_version action="INSERT_OR_UPDATE">
        <action>DELETE</action>
        <application display_value="LMS Application">9fa9ee7f93650210b09bf2918bba106b</application>
        <file_path/>
        <instance_id>96a148cddbee3d1802d9172913961973</instance_id>
        <instance_name>dev211199</instance_name>
        <name>sys_script_include_5a9bb62d931a0a10b09bf2918bba10a2</name>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;&lt;sys_script_include action="INSERT_OR_UPDATE"&gt;&lt;access&gt;public&lt;/access&gt;&lt;active&gt;true&lt;/active&gt;&lt;api_name&gt;x_1383177_lms_app.AylienTextAnalysis&lt;/api_name&gt;&lt;caller_access/&gt;&lt;client_callable&gt;false&lt;/client_callable&gt;&lt;description/&gt;&lt;name&gt;AylienTextAnalysis&lt;/name&gt;&lt;script&gt;&lt;![CDATA[var AylienTextAnalysis = Class.create();
AylienTextAnalysis.prototype = {
    initialize: function() {
    },

    getTags: function(detailed_description) {
        // Define the endpoint and your API credentials
        var url = 'https://api.aylien.com/api/v1/concepts';
        var appId = '87b0b28f'; // Replace with your Aylien App ID
        var appKey = '548dc3cfeabc7eb9c21d3d7966a94808'; // Replace with your Aylien App Key

        var requestBody = {
            text: detailed_description
        };

        var headers = {
            'X-AYLIEN-TextAPI-Application-ID': appId,
            'X-AYLIEN-TextAPI-Application-Key': appKey,
            'Content-Type': 'application/json'
        };

        var client = new sn_ws.RESTMessageV2();
        client.setEndpoint(url);
        client.setHttpMethod('post');
        client.setRequestHeader('X-AYLIEN-TextAPI-Application-ID', appId);
        client.setRequestHeader('X-AYLIEN-TextAPI-Application-Key', appKey);
        client.setRequestHeader('Content-Type', 'application/json');
        client.setRequestBody(JSON.stringify(requestBody));

        var response = client.execute();
        var responseBody = response.getBody();
        var httpStatus = response.getStatusCode();

        if (httpStatus == 200) {
            var responseData = JSON.parse(responseBody);
            // Extract keywords or tags from the response data
            var tag = this.extractTags(responseData);
            return tag;
        } else {
            gs.error('Aylien API request failed: ' + httpStatus + ' ' + responseBody);
            return null;
        }
    },

    extractTags: function(responseData) {
        var tag = [];
        // Assuming the API returns a list of concepts
        if (responseData &amp;&amp; responseData.concepts) {
            for (var concept in responseData.concepts) {
                if (responseData.concepts.hasOwnProperty(concept)) {
                    tag.push(concept);
                }
            }
        }
        return tag.join(','); // Join tags by comma or any other delimiter
    },

    type: 'AylienTextAnalysis'
};
]]&gt;&lt;/script&gt;&lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;&lt;sys_created_by&gt;pranav.k&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2024-05-21 06:24:43&lt;/sys_created_on&gt;&lt;sys_id&gt;5a9bb62d931a0a10b09bf2918bba10a2&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_name&gt;AylienTextAnalysis&lt;/sys_name&gt;&lt;sys_package display_value="LMS Application" source="x_1383177_lms_app"&gt;9fa9ee7f93650210b09bf2918bba106b&lt;/sys_package&gt;&lt;sys_policy&gt;read&lt;/sys_policy&gt;&lt;sys_scope display_value="LMS Application"&gt;9fa9ee7f93650210b09bf2918bba106b&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_script_include_5a9bb62d931a0a10b09bf2918bba10a2&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;pranav.k&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2024-05-21 06:24:43&lt;/sys_updated_on&gt;&lt;/sys_script_include&gt;&lt;/record_update&gt;</payload>
        <payload_hash>1835529031</payload_hash>
        <record_name>AylienTextAnalysis</record_name>
        <reverted_from/>
        <source>db6bfae9931a0a10b09bf2918bba103e</source>
        <source_table>sys_update_set</source_table>
        <state>previous</state>
        <sys_created_by>pranav.k</sys_created_by>
        <sys_created_on>2024-05-21 06:24:43</sys_created_on>
        <sys_id>17cc76e9931a0a10b09bf2918bba10f5</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_recorded_at>18f99d2db8d0000001</sys_recorded_at>
        <sys_updated_by>pranav.k</sys_updated_by>
        <sys_updated_on>2024-05-21 06:24:43</sys_updated_on>
        <type>Script Include</type>
        <update_guid>5bcc76e99c1a0a1044471fbb7f533ff4</update_guid>
        <update_guid_history>5bcc76e99c1a0a1044471fbb7f533ff4:1835529031</update_guid_history>
    </sys_update_version>
    <sys_metadata_delete action="INSERT_OR_UPDATE">
        <sys_audit_delete/>
        <sys_class_name>sys_metadata_delete</sys_class_name>
        <sys_created_by>pranav.k</sys_created_by>
        <sys_created_on>2024-05-24 05:43:11</sys_created_on>
        <sys_db_object display_value="" name="sys_script_include">sys_script_include</sys_db_object>
        <sys_id>1acf5f3f02b74ad68db1fe7c7480e684</sys_id>
        <sys_metadata>5a9bb62d931a0a10b09bf2918bba10a2</sys_metadata>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>AylienTextAnalysis</sys_name>
        <sys_package display_value="LMS Application" source="x_1383177_lms_app">9fa9ee7f93650210b09bf2918bba106b</sys_package>
        <sys_parent/>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="LMS Application">9fa9ee7f93650210b09bf2918bba106b</sys_scope>
        <sys_scope_delete display_value="">1cee37d185a6415a844cb79c3c6b7bb1</sys_scope_delete>
        <sys_update_name>sys_script_include_5a9bb62d931a0a10b09bf2918bba10a2</sys_update_name>
        <sys_update_version display_value="sys_script_include_5a9bb62d931a0a10b09bf2918bba10a2">17cc76e9931a0a10b09bf2918bba10f5</sys_update_version>
        <sys_updated_by>pranav.k</sys_updated_by>
        <sys_updated_on>2024-05-24 05:43:11</sys_updated_on>
    </sys_metadata_delete>
</record_update>
