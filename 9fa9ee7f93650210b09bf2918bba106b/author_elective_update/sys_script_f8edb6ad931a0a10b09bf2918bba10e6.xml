<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="DELETE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_1383177_lms_app_discussion</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Auto-populate Tags</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/ ) {
    // Function to extract tags from detailed_description
    function extractTags(description) {
        // Simple example: split by spaces and filter out common words
        // You can use a more sophisticated approach depending on your needs
        var commonWords = ['the', 'and', 'new', 'gt', 'ta', 'of', 'a', 'to', 'p', 'i', 'am', "a", "an", "this", "and", "but", "or", "nor", "so", "yet", "at", "by", "for", "from", "in", "of", "on", "to", "with", "he", "she", "it", "they", "them", "we", "us", "you", "I", "am", "is", "are", "was", "were", "be", "being", "been", "have", "has", "had", "do", "does", "did", "can", "could", "will", "would", "shall", "should", "may", "might", "must", "very", "too", "just", "only", "if", "then", "else", "when", "where", "how", "why", "what",'1','2','3','4','5','6','7','8','9','0','m'];
        var words = description.split(/\W+/);
        var tag = [];

        words.forEach(function(word) {
            if (word && !commonWords.includes(word.toLowerCase())) {
                tag.push(word.toLowerCase());
            }
        });

        return tag.join(','); // Join tags by comma or any other delimiter
    }

    if (current.detailed_description) {
        current.tag = extractTags(current.detailed_description);
    }

})(current, previous);
]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>pranav.k</sys_created_by>
        <sys_created_on>2024-05-21 06:30:04</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>f8edb6ad931a0a10b09bf2918bba10e6</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Auto-populate Tags</sys_name>
        <sys_overrides/>
        <sys_package display_value="LMS Application" source="x_1383177_lms_app">9fa9ee7f93650210b09bf2918bba106b</sys_package>
        <sys_policy/>
        <sys_scope display_value="LMS Application">9fa9ee7f93650210b09bf2918bba106b</sys_scope>
        <sys_update_name>sys_script_f8edb6ad931a0a10b09bf2918bba10e6</sys_update_name>
        <sys_updated_by>pranav.k</sys_updated_by>
        <sys_updated_on>2024-05-21 06:30:04</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="DELETE" query="documentkey=f8edb6ad931a0a10b09bf2918bba10e6"/>
    <sys_update_version action="INSERT_OR_UPDATE">
        <action>DELETE</action>
        <application display_value="LMS Application">9fa9ee7f93650210b09bf2918bba106b</application>
        <file_path/>
        <instance_id>96a148cddbee3d1802d9172913961973</instance_id>
        <instance_name>dev211199</instance_name>
        <name>sys_script_f8edb6ad931a0a10b09bf2918bba10e6</name>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update sys_domain="global" table="sys_script"&gt;&lt;sys_script action="INSERT_OR_UPDATE"&gt;&lt;abort_action&gt;false&lt;/abort_action&gt;&lt;access&gt;package_private&lt;/access&gt;&lt;action_delete&gt;false&lt;/action_delete&gt;&lt;action_insert&gt;true&lt;/action_insert&gt;&lt;action_query&gt;false&lt;/action_query&gt;&lt;action_update&gt;true&lt;/action_update&gt;&lt;active&gt;true&lt;/active&gt;&lt;add_message&gt;false&lt;/add_message&gt;&lt;advanced&gt;true&lt;/advanced&gt;&lt;change_fields&gt;false&lt;/change_fields&gt;&lt;client_callable&gt;false&lt;/client_callable&gt;&lt;collection&gt;x_1383177_lms_app_discussion&lt;/collection&gt;&lt;condition/&gt;&lt;description/&gt;&lt;execute_function&gt;false&lt;/execute_function&gt;&lt;filter_condition/&gt;&lt;is_rest&gt;false&lt;/is_rest&gt;&lt;message/&gt;&lt;name&gt;Auto-populate Tags&lt;/name&gt;&lt;order&gt;100&lt;/order&gt;&lt;priority&gt;100&lt;/priority&gt;&lt;rest_method/&gt;&lt;rest_method_text/&gt;&lt;rest_service/&gt;&lt;rest_service_text/&gt;&lt;rest_variables/&gt;&lt;role_conditions/&gt;&lt;script&gt;&lt;![CDATA[(function executeRule(current, previous /*null when async*/ ) {
    // Function to extract tags from detailed_description
    function extractTags(description) {
        // Simple example: split by spaces and filter out common words
        // You can use a more sophisticated approach depending on your needs
        var commonWords = ['the', 'and', 'new', 'gt', 'ta', 'of', 'a', 'to', 'p', 'i', 'am', "a", "an", "this", "and", "but", "or", "nor", "so", "yet", "at", "by", "for", "from", "in", "of", "on", "to", "with", "he", "she", "it", "they", "them", "we", "us", "you", "I", "am", "is", "are", "was", "were", "be", "being", "been", "have", "has", "had", "do", "does", "did", "can", "could", "will", "would", "shall", "should", "may", "might", "must", "very", "too", "just", "only", "if", "then", "else", "when", "where", "how", "why", "what",'1','2','3','4','5','6','7','8','9','0','m'];
        var words = description.split(/\W+/);
        var tag = [];

        words.forEach(function(word) {
            if (word &amp;&amp; !commonWords.includes(word.toLowerCase())) {
                tag.push(word.toLowerCase());
            }
        });

        return tag.join(','); // Join tags by comma or any other delimiter
    }

    if (current.detailed_description) {
        current.tag = extractTags(current.detailed_description);
    }

})(current, previous);
]]&gt;&lt;/script&gt;&lt;sys_class_name&gt;sys_script&lt;/sys_class_name&gt;&lt;sys_created_by&gt;pranav.k&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2024-05-21 06:30:04&lt;/sys_created_on&gt;&lt;sys_domain&gt;global&lt;/sys_domain&gt;&lt;sys_domain_path&gt;/&lt;/sys_domain_path&gt;&lt;sys_id&gt;f8edb6ad931a0a10b09bf2918bba10e6&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_name&gt;Auto-populate Tags&lt;/sys_name&gt;&lt;sys_overrides/&gt;&lt;sys_package display_value="LMS Application" source="x_1383177_lms_app"&gt;9fa9ee7f93650210b09bf2918bba106b&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="LMS Application"&gt;9fa9ee7f93650210b09bf2918bba106b&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_script_f8edb6ad931a0a10b09bf2918bba10e6&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;pranav.k&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2024-05-21 06:30:04&lt;/sys_updated_on&gt;&lt;template/&gt;&lt;when&gt;before&lt;/when&gt;&lt;/sys_script&gt;&lt;sys_translated_text action="delete_multiple" query="documentkey=f8edb6ad931a0a10b09bf2918bba10e6"/&gt;&lt;/record_update&gt;</payload>
        <payload_hash>115621430</payload_hash>
        <record_name>Auto-populate Tags</record_name>
        <reverted_from/>
        <source>db6bfae9931a0a10b09bf2918bba103e</source>
        <source_table>sys_update_set</source_table>
        <state>previous</state>
        <sys_created_by>pranav.k</sys_created_by>
        <sys_created_on>2024-05-21 06:30:04</sys_created_on>
        <sys_id>b10e32ed931a0a10b09bf2918bba10c8</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_recorded_at>18f99d7c1850000001</sys_recorded_at>
        <sys_updated_by>pranav.k</sys_updated_by>
        <sys_updated_on>2024-05-21 06:30:04</sys_updated_on>
        <type>Business Rule</type>
        <update_guid>a50e32ed571a0a1039e73f35eb5362c7</update_guid>
        <update_guid_history>a50e32ed571a0a1039e73f35eb5362c7:115621430</update_guid_history>
    </sys_update_version>
    <sys_metadata_delete action="INSERT_OR_UPDATE">
        <sys_audit_delete/>
        <sys_class_name>sys_metadata_delete</sys_class_name>
        <sys_created_by>pranav.k</sys_created_by>
        <sys_created_on>2024-05-24 05:42:32</sys_created_on>
        <sys_db_object display_value="" name="sys_script">sys_script</sys_db_object>
        <sys_id>39460665370245c5af6b5d9fdcf93539</sys_id>
        <sys_metadata>f8edb6ad931a0a10b09bf2918bba10e6</sys_metadata>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Auto-populate Tags</sys_name>
        <sys_package display_value="LMS Application" source="x_1383177_lms_app">9fa9ee7f93650210b09bf2918bba106b</sys_package>
        <sys_parent display_value="Discussion Forum">e5393e7293b10210b09bf2918bba10bd</sys_parent>
        <sys_policy/>
        <sys_scope display_value="LMS Application">9fa9ee7f93650210b09bf2918bba106b</sys_scope>
        <sys_scope_delete display_value="">1cee37d185a6415a844cb79c3c6b7bb1</sys_scope_delete>
        <sys_update_name>sys_script_f8edb6ad931a0a10b09bf2918bba10e6</sys_update_name>
        <sys_update_version display_value="sys_script_f8edb6ad931a0a10b09bf2918bba10e6">b10e32ed931a0a10b09bf2918bba10c8</sys_update_version>
        <sys_updated_by>pranav.k</sys_updated_by>
        <sys_updated_on>2024-05-24 05:42:32</sys_updated_on>
    </sys_metadata_delete>
</record_update>
