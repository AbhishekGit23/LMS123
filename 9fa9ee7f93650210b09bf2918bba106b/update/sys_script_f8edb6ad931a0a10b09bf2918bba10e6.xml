<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_1383177_lms_app_discussion</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Auto-populate Tags</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/ ) {
    // Function to extract tags from detailed_description
    function extractTags(description) {
        // Simple example: split by spaces and filter out common words
        // You can use a more sophisticated approach depending on your needs
        var commonWords = ['the', 'and', 'new', 'gt', 'ta', 'of', 'a', 'to', 'p', 'i', 'am', "a", "an", "this", "and", "but", "or", "nor", "so", "yet", "at", "by", "for", "from", "in", "of", "on", "to", "with", "he", "she", "it", "they", "them", "we", "us", "you", "I", "am", "is", "are", "was", "were", "be", "being", "been", "have", "has", "had", "do", "does", "did", "can", "could", "will", "would", "shall", "should", "may", "might", "must", "very", "too", "just", "only", "if", "then", "else", "when", "where", "how", "why", "what",'1','2','3','4','5','6','7','8','9','0','m'];
        var words = description.split(/\W+/);
        var tag = [];

        words.forEach(function(word) {
            if (word && !commonWords.includes(word.toLowerCase())) {
                tag.push(word.toLowerCase());
            }
        });

        return tag.join(','); // Join tags by comma or any other delimiter
    }

    if (current.detailed_description) {
        current.tag = extractTags(current.detailed_description);
    }

})(current, previous);
]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>pranav.k</sys_created_by>
        <sys_created_on>2024-05-21 06:30:04</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>f8edb6ad931a0a10b09bf2918bba10e6</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Auto-populate Tags</sys_name>
        <sys_overrides/>
        <sys_package display_value="LMS Application" source="x_1383177_lms_app">9fa9ee7f93650210b09bf2918bba106b</sys_package>
        <sys_policy/>
        <sys_scope display_value="LMS Application">9fa9ee7f93650210b09bf2918bba106b</sys_scope>
        <sys_update_name>sys_script_f8edb6ad931a0a10b09bf2918bba10e6</sys_update_name>
        <sys_updated_by>pranav.k</sys_updated_by>
        <sys_updated_on>2024-05-21 06:30:04</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=f8edb6ad931a0a10b09bf2918bba10e6"/>
</record_update>
