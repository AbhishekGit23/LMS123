<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>public</access>
        <active>true</active>
        <api_name>x_1383177_lms_app.AylienTextAnalysis</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description/>
        <name>AylienTextAnalysis</name>
        <script><![CDATA[var AylienTextAnalysis = Class.create();
AylienTextAnalysis.prototype = {
    initialize: function() {
    },

    getTags: function(detailed_description) {
        // Define the endpoint and your API credentials
        var url = 'https://api.aylien.com/api/v1/concepts';
        var appId = '87b0b28f'; // Replace with your Aylien App ID
        var appKey = '548dc3cfeabc7eb9c21d3d7966a94808'; // Replace with your Aylien App Key

        var requestBody = {
            text: detailed_description
        };

        var headers = {
            'X-AYLIEN-TextAPI-Application-ID': appId,
            'X-AYLIEN-TextAPI-Application-Key': appKey,
            'Content-Type': 'application/json'
        };

        var client = new sn_ws.RESTMessageV2();
        client.setEndpoint(url);
        client.setHttpMethod('post');
        client.setRequestHeader('X-AYLIEN-TextAPI-Application-ID', appId);
        client.setRequestHeader('X-AYLIEN-TextAPI-Application-Key', appKey);
        client.setRequestHeader('Content-Type', 'application/json');
        client.setRequestBody(JSON.stringify(requestBody));

        var response = client.execute();
        var responseBody = response.getBody();
        var httpStatus = response.getStatusCode();

        if (httpStatus == 200) {
            var responseData = JSON.parse(responseBody);
            // Extract keywords or tags from the response data
            var tag = this.extractTags(responseData);
            return tag;
        } else {
            gs.error('Aylien API request failed: ' + httpStatus + ' ' + responseBody);
            return null;
        }
    },

    extractTags: function(responseData) {
        var tag = [];
        // Assuming the API returns a list of concepts
        if (responseData && responseData.concepts) {
            for (var concept in responseData.concepts) {
                if (responseData.concepts.hasOwnProperty(concept)) {
                    tag.push(concept);
                }
            }
        }
        return tag.join(','); // Join tags by comma or any other delimiter
    },

    type: 'AylienTextAnalysis'
};
]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>pranav.k</sys_created_by>
        <sys_created_on>2024-05-21 06:24:43</sys_created_on>
        <sys_id>5a9bb62d931a0a10b09bf2918bba10a2</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>AylienTextAnalysis</sys_name>
        <sys_package display_value="LMS Application" source="x_1383177_lms_app">9fa9ee7f93650210b09bf2918bba106b</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="LMS Application">9fa9ee7f93650210b09bf2918bba106b</sys_scope>
        <sys_update_name>sys_script_include_5a9bb62d931a0a10b09bf2918bba10a2</sys_update_name>
        <sys_updated_by>pranav.k</sys_updated_by>
        <sys_updated_on>2024-05-21 06:24:43</sys_updated_on>
    </sys_script_include>
</record_update>
