<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[api.controller = function($location, $scope) {
    var c = this;

    c.module_page = function(sys_id) {
        var portalURL = $location.absUrl().split('?')[0];
        var pageID = 'lms_modules_content'; // Update with actual page ID
        var url = portalURL + '?id=' + pageID + '&sys_id=' + sys_id;
        window.location.href = url;			
    };	
	    c.courseDetailPage = function(sys_id) {
        var portalURL = $location.absUrl().split('?')[0];
        var pageID = 'lms_course_details'; // Update with actual page ID
        var url = portalURL + '?id=' + pageID + '&sys_id=' + sys_id;
        window.location.href = url;
			
    };	
		
};
]]></client_script>
        <controller_as>c</controller_as>
        <css>.container {
  display: flex;
  flex-direction: column;
  width: 100%;
  max-width: 1200px;
  margin: 0 auto;
}

.course-controls {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 10px 20px;
  border-bottom: 1px solid #ddd;
}

.course-controls button {
  background: #f0f0f0;
  border: none;
  padding: 8px 16px;
  border-radius: 5px;
  cursor: pointer;
  transition: all 0.3s ease;
}

.course-controls button:hover {
  background: #e0e0e0;
}

.course-container {
  display: grid;
  grid-template-columns: 1fr;
  gap: 20px;
  padding: 20px;
}

@media (min-width: 600px) {
  .course-container {
    grid-template-columns: repeat(2, 1fr);
  }
}

@media (min-width: 900px) {
  .course-container {
    grid-template-columns: repeat(3, 1fr);
  }
}

.course-card {
  position: relative;
  background: #fff;
  border: 1px solid #ddd;
  border-radius: 10px;
  padding: 20px;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
  transition: all 0.3s ease;
  overflow: hidden;
  margin-top: 10px;
  margin-bottom: 10px;
  margin-left: 7px;
  margin-right: 7px;
}

.course-name {
  font-size: 1.5em;
  font-weight: 600;
  color: #333;
  text-align: center;
}

.course-image {
  width: 100%;
  height: 150px;
  object-fit: contain;
  border-radius: 5px;
  margin-bottom: 10px;
  aspect-ratio: 1;
}

.course-card:hover .course-hover-details {
  opacity: 1;
  transform: translateY(0);
}

.course-hover-details {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(255, 255, 255, 0.95);
  padding: 20px;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
  border-radius: 10px;
  opacity: 0;
  transform: translateY(20px);
  transition: all 0.3s ease;
}

.course-hover-details h3 {
  font-size: 1.5em;
  text-align: center;
  margin-bottom: 10px;
}

.course-hover-details p {
  font-size: 0.9em;
  color: #333;
  text-align: center;
}

.requested-courses-container {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 20px;
  padding: 20px;
}

.requested-course {
  position: relative;
  background: #fff;
  border: 1px solid #ddd;
  border-radius: 10px;
  padding: 20px;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
  transition: all 0.3s ease;
}

.requested-course:hover {
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
  transform: translateY(-5px);
}

.requested-course .course-name {
  font-size: 1.5em;
  font-weight: 600;
  color: #333;
  text-align: center;
}

.requested-course .course-image {
  width: 100%;
  height: 150px;
  object-fit: contain;
  border-radius: 5px;
  margin-bottom: 10px;
  aspect-ratio: 1;
}</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>false</has_preview>
        <id>lms_my_learnings</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {  }]]></link>
        <name>LMS My Learnings</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
    data.courses = [];
    data.requestedCourses = [];
    var userId = gs.getUserID(); // Get the current user's ID

    // Query the enrollment table for courses the current user is enrolled in
    var grEnrollment = new GlideRecordSecure('x_1383177_lms_app_enrollment');
    grEnrollment.addQuery('learner_name', userId);
    grEnrollment.query();

    var enrolledCourseIds = [];
    var requestedCourseIds = [];
    while (grEnrollment.next()) {
        if (grEnrollment.getValue('status') == 'approval pending' || grEnrollment.getValue('status') == 'requested') {
            requestedCourseIds.push(grEnrollment.getValue('course_name'));
        } else {
            enrolledCourseIds.push(grEnrollment.getValue('course_name'));
        }
    }

    if (enrolledCourseIds.length > 0) {
        // Query the course table for the courses the current user is enrolled in
        var grCourse = new GlideRecordSecure('x_1383177_lms_app_course');
        grCourse.addQuery('sys_id', 'IN', enrolledCourseIds);
        grCourse.query();

        while (grCourse.next()) {
            data.courses.push({
                Name: grCourse.getDisplayValue('course_name'),
                Short_description: grCourse.getDisplayValue('short_description'),
                Thumbnail: grCourse.getDisplayValue('thumbnail'),
                sys_id: grCourse.getUniqueValue(),
                Description: grCourse.getDisplayValue('short_description') // Add full description
            });
        }
    }

    if (requestedCourseIds.length > 0) {
        // Query the course table for the requested courses
        var grRequestedCourse = new GlideRecordSecure('x_1383177_lms_app_course');
        grRequestedCourse.addQuery('sys_id', 'IN', requestedCourseIds);
        grRequestedCourse.query();

        while (grRequestedCourse.next()) {
            data.requestedCourses.push({
                Name: grRequestedCourse.getDisplayValue('course_name'),
                Short_description: grRequestedCourse.getDisplayValue('short_description'),
                Thumbnail: grRequestedCourse.getDisplayValue('thumbnail'),
                sys_id: grRequestedCourse.getUniqueValue(),
                Description: grRequestedCourse.getDisplayValue('short_description') // Add full description
            });
        }
    }

    if (input) {
        // Handle user input if needed
    }
})();
]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>abhishek.s</sys_created_by>
        <sys_created_on>2024-06-13 09:38:46</sys_created_on>
        <sys_id>06c5028d93b60210b09bf2918bba101f</sys_id>
        <sys_mod_count>21</sys_mod_count>
        <sys_name>LMS My Learnings</sys_name>
        <sys_package display_value="LMS Application" source="x_1383177_lms_app">9fa9ee7f93650210b09bf2918bba106b</sys_package>
        <sys_policy/>
        <sys_scope display_value="LMS Application">9fa9ee7f93650210b09bf2918bba106b</sys_scope>
        <sys_update_name>sp_widget_06c5028d93b60210b09bf2918bba101f</sys_update_name>
        <sys_updated_by>abhishek.s</sys_updated_by>
        <sys_updated_on>2024-06-14 09:37:13</sys_updated_on>
        <template><![CDATA[<div class="container">
  <!-- My Learnings Section -->
  <h2>My Learnings</h2>
  <div class="course-container">    
    <div class="course-card"
         ng-click="c.module_page(s.sys_id)"
         ng-repeat="s in c.data.courses">
      <img class="course-image" ng-src="{{ s.Thumbnail }}" alt="{{ s.Name }}">
      <div class="course-name" ng-bind="s.Name"></div>
      <div class="course-hover-details">
        <h3 ng-bind="s.Name"></h3>
        <p ng-bind="s.Description"></p>
      </div>
    </div>
  </div>

  <!-- Requested Section -->
  <h2>Requested</h2>
  <div class="requested-courses-container">
    <div class="requested-course"
         ng-click="c.courseDetailPage(s.sys_id)"
         ng-repeat="s in c.data.requestedCourses">
      <img class="course-image" ng-src="{{ s.Thumbnail }}" alt="{{ s.Name }}">
      <div class="course-name" ng-bind="s.Name"></div>
      <div class="course-hover-details">
        <h3 ng-bind="s.Name"></h3>
        <p ng-bind="s.Description"></p>
      </div>
    </div>
  </div>

]]></template>
    </sp_widget>
</record_update>
