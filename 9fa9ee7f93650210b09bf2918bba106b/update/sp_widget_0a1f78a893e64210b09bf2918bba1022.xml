<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[api.controller = function($scope, $location) {
  var c = this;

    c.redirectToCoursePage = function(domain) {
        var portalURL = $location.absUrl().split('?')[0];
        var pageID = 'lms_courses'; // Replace this with the actual page ID of the course list
        var url = portalURL + '?id=' + pageID + '&domain=' + encodeURIComponent(domain);
        window.location.href = url;
    };
};
]]></client_script>
        <controller_as>c</controller_as>
        <css>.container {
    display: flex;
    align-items: center;
    justify-content: center;
    background: linear-gradient(45deg, #83a4d4, #b6fbff);
    padding: 20px;
    border-radius: 10px;
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
}

.btn {
    cursor: pointer;
    user-select: none;
    font-size: 2em;
    color: white;
    padding: 10px 20px;
    background: #ff6f61;
    border: none;
    border-radius: 50%;
    transition: background 0.3s ease, transform 0.3s ease;
}

.btn:hover {
    background: #ff3d2e;
    transform: scale(1.1);
}

.domains {
    display: flex;
    overflow-x: auto;
    scroll-behavior: smooth;
    gap: 20px;
    padding: 20px;
    margin: 0 20px;
    background: #ffffff;
    border-radius: 10px;
    box-shadow: inset 0 0 10px rgba(0, 0, 0, 0.1);
}

.domain {
    flex: 0 0 auto;
    min-width: 200px;
    padding: 20px;
    background: #f8f9fa;
    border-radius: 10px;
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
    transition: transform 0.3s ease, box-shadow 0.3s ease;
}

.domain:hover {
    transform: translateY(-10px);
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
}

.domain-title {
    font-size: 1.5em;
    color: #333;
    text-align: center;
    margin: 0;
}

/* Hide scrollbar for better aesthetics */
.domains::-webkit-scrollbar {
    display: none;
}

.domains {
    -ms-overflow-style: none;
    scrollbar-width: none;
}
</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>true</has_preview>
        <id>test_widgets</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {  }]]></link>
        <name>Test Widgets</name>
        <option_schema/>
        <public>true</public>
        <roles/>
        <script><![CDATA[(function() {
  if (!input) {
    data.domains = [];
    var grDomain = new GlideRecordSecure('x_1383177_lms_app_course_domain');
    grDomain.addActiveQuery();
    grDomain.query();

    while (grDomain.next()) {
      data.domains.push({
        Name: grDomain.getDisplayValue('name'),
        sys_id: grDomain.getUniqueValue()
      });
    }
  }
})();
]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>pranav.k</sys_created_by>
        <sys_created_on>2024-05-30 04:57:17</sys_created_on>
        <sys_id>0a1f78a893e64210b09bf2918bba1022</sys_id>
        <sys_mod_count>118</sys_mod_count>
        <sys_name>Test Widgets</sys_name>
        <sys_package display_value="LMS Application" source="x_1383177_lms_app">9fa9ee7f93650210b09bf2918bba106b</sys_package>
        <sys_policy/>
        <sys_scope display_value="LMS Application">9fa9ee7f93650210b09bf2918bba106b</sys_scope>
        <sys_update_name>sp_widget_0a1f78a893e64210b09bf2918bba1022</sys_update_name>
        <sys_updated_by>pranav.k</sys_updated_by>
        <sys_updated_on>2024-06-05 19:27:38</sys_updated_on>
        <template><![CDATA[<div class="container">
        <div class="btn" id="prevBtn">&lt;</div>
        <div class="domains" id="domainList">
            <div class="domain" ng-repeat="s in c.data.domains" ng-click="c.redirectToCoursePage(s.Name)">
                <h3 class="domain-title" ng-bind="s.Name"></h3>
            </div>
        </div>
        <div class="btn" id="nextBtn">&gt;</div>
    </div>
    <script>
        var domainList = document.getElementById('domainList');
        var prevBtn = document.getElementById('prevBtn');
        var nextBtn = document.getElementById('nextBtn');

        function scrollDomains(direction) {
            const scrollAmount = 800;
            const scrollBehavior = { left: direction * scrollAmount, behavior: 'smooth' };
            domainList.scrollBy(scrollBehavior);

            setTimeout(() => {
                if (direction === 1 && domainList.scrollLeft + domainList.clientWidth >= domainList.scrollWidth) {
                    domainList.scrollTo({ left: 0, behavior: 'smooth' });
                } else if (direction === -1 && domainList.scrollLeft === 0) {
                    domainList.scrollTo({ left: domainList.scrollWidth, behavior: 'smooth' });
                }
            }, 800); // Match with the smooth scroll duration
        }

        prevBtn.addEventListener('click', function() {
            scrollDomains(-1);
        });

        nextBtn.addEventListener('click', function() {
            scrollDomains(1);
        });
    </script>]]></template>
    </sp_widget>
</record_update>
