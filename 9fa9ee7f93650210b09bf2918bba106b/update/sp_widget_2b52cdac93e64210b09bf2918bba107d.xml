<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[api.controller = function($location, $scope) {
    var c = this;

    // Function to initialize all courses
    c.initializeCourses = function() {
        c.allCourses = angular.copy(c.data.courses);
        c.showAllCourses();
    };

    c.showAllCourses = function() {
        c.filteredCourses = c.allCourses;
    };

    c.filterCoursesByDomain = function(domainSysId) {
        if (domainSysId) {
            c.filteredCourses = c.allCourses.filter(function(course) {
                return course.DomainSysIds.includes(domainSysId);
            });
        } else {
            c.showAllCourses();
        }
    };

    c.redirectToCourseDetail = function(sys_id) {
        var portalURL = $location.absUrl().split('?')[0];
        var pageID = 'lms_course_details'; // Update with actual page ID
        var url = portalURL + '?id=' + pageID + '&sys_id=' + sys_id;
        window.location.href = url;
    };

    // Watch for changes in URL parameters
    $scope.$watch(function() {
        return $location.search();
    }, function(params) {
        var domainSysId = params.domain_sys_id;
        c.filterCoursesByDomain(domainSysId);
    });

    // Initialize with all courses
    c.initializeCourses();
};
]]></client_script>
        <controller_as>c</controller_as>
        <css>.container {
  display: flex;
  flex-direction: column;
  width: 100%;
  max-width: 900px; /* Adjust for responsiveness */
  margin: 0 auto; /* Center the container horizontally */
}

.search-bar {
  border: 1px solid #ccc; /* Change #ccc for your desired color */
  border-radius: 5px; /* Adjust the radius for roundness */
}

.search-bar:hover {
  background-color: #f5f5f5; /* Change #f5f5f5 for your desired color */
}

.search-icon {
  color: #999; /* Change #999 for your desired color */
  font-size: 18px; /* Adjust the size */
}

.search-bar {
  padding: 10px 15px; /* Adjust padding as desired */
  font-size: 16px; /* Adjust font size */
}

.course-controls {
  display: flex;
  justify-content: space-between; /* Distribute buttons evenly */
  align-items: center;
  padding: 10px 20px;
  border-bottom: 1px solid #ddd;
}

.course-controls button {
  background: #f0f0f0;
  border: none;
  padding: 8px 16px;
  border-radius: 5px;
  cursor: pointer;
  transition: all 0.3s ease;
}

.course-controls button:hover {
  background: #e0e0e0;
}

.course-container {
  padding: 20px;
}

.course-card {
  background: #fff;
  border: 1px solid #ddd;
  border-radius: 10px;
  margin: 10px 0;
  padding: 20px;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
  transition: all 0.3s ease;
  display: flex;
  flex-direction: row;
  align-items: center;
}

.course-card:hover {
  box-shadow: 0 4px 16px rgba(0, 0, 0, 0.2);
  transform: translateY(-5px);
}

.course-image {
  width: 40%; /* Adjust width as needed */
  height: 200px;
  object-fit: cover;
  border-radius: 10px;
  margin-right: 20px; /* Spacing between image and text */
}

.course-details {
  flex: 1;
  display: flex;
  flex-direction: column;
  justify-content: center;
}

.course-title {
  font-size: 24px;
  font-weight: 600;
  color: #333;
  margin-bottom: 10px;
}

.course-description {
  font-size: 16px;
  line-height: 1.6;
  color: #555;
}
</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>true</has_preview>
        <id>lms_course_list_1c</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {  }]]></link>
        <name>LMS Course List 1 Card</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
    data.courses = [];
    var domainSysId = $sp.getParameter('domain_sys_id'); // Get domain_sys_id from the query parameter

    var grCourse = new GlideRecordSecure('x_1383177_lms_app_course');
    grCourse.addActiveQuery();
    grCourse.query();

    while (grCourse.next()) {
        // Fetch all domain associations for each course
        var domainCourse = new GlideRecordSecure('x_1383177_lms_app_m2m_x_1383177_lm_x_1383177_lm_m2m_domain_course');
        domainCourse.addQuery('x_1383177_lms_app_course', grCourse.getUniqueValue());
        domainCourse.query();

        var domainIds = [];
        while (domainCourse.next()) {
            domainIds.push(domainCourse.getValue('x_1383177_lms_app_course_domain'));
        }

        data.courses.push({
            Name: grCourse.getDisplayValue('course_name'),
            Short_description: grCourse.getDisplayValue('short_description'),
            Thumbnail: grCourse.getDisplayValue('thumbnail'),
            sys_id: grCourse.getUniqueValue(),
            DomainSysIds: domainIds // Assuming one course can belong to multiple domains
        });
    }

    if (input) {
        // Handle user input if needed
    }
})();
]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>pranav.k</sys_created_by>
        <sys_created_on>2024-05-30 05:11:35</sys_created_on>
        <sys_id>2b52cdac93e64210b09bf2918bba107d</sys_id>
        <sys_mod_count>59</sys_mod_count>
        <sys_name>LMS Course List 1 Card</sys_name>
        <sys_package display_value="LMS Application" source="x_1383177_lms_app">9fa9ee7f93650210b09bf2918bba106b</sys_package>
        <sys_policy/>
        <sys_scope display_value="LMS Application">9fa9ee7f93650210b09bf2918bba106b</sys_scope>
        <sys_update_name>sp_widget_2b52cdac93e64210b09bf2918bba107d</sys_update_name>
        <sys_updated_by>abhishek.s</sys_updated_by>
        <sys_updated_on>2024-06-11 05:20:50</sys_updated_on>
        <template><![CDATA[<div class="container">
  <div class="course-controls">
    <button ng-click="c.showAllCourses()">Show All</button>
  </div>
  <div class="course-container">
    <div class="course-card"
         ng-click="c.redirectToCourseDetail(s.sys_id)"
         ng-repeat="s in c.filteredCourses">
      <img class="course-image" ng-src="{{ s.Thumbnail }}" alt="{{ s.Name }}">
      <div class="course-details">
        <h3 class="course-title" ng-bind="s.Name"></h3>
        <p class="course-description" ng-bind="s.Short_description"></p>
      </div>
    </div>
  </div>
</div>
]]></template>
    </sp_widget>
</record_update>
