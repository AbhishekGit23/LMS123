<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[api.controller = function($scope, $http) {
  var c = this;
  
  // Fetch the course details and modules
  c.data.course = {};
  c.data.modules = [];
  c.selectedModule = null;
	
  // Make sure HTML content is safe to bind
  if (c.data.module && c.data.module.description && c.data.module.description.value) {
    c.data.course.module.value = $sce.trustAsHtml(c.data.module.description.value);
  }
  // Function to select a module
  c.selectModule = function(moduleSysId) {
    c.selectedModule = moduleSysId;
  };

  // Navigate to the previous lesson
  c.prevLesson = function() {
    // Implement the logic to go to the previous lesson
  };

  // Navigate to the next lesson
  c.nextLesson = function() {
    // Implement the logic to go to the next lesson
  };

  // Fetch the data when the page loads
  c.server.get().then(function(response) {
    c.data.course = response.data.course;
    c.data.modules = response.data.modules;

    // Automatically select the first module
    if (c.data.modules.length > 0) {
      c.selectModule(c.data.modules[0].sys_id);
    }
  });
};
]]></client_script>
        <controller_as>c</controller_as>
        <css>  padding: 20px;
}

.module-header {
  margin-bottom: 20px;
}

.module-header h1 {
  font-size: 28px;
  margin-bottom: 10px;
}

.module-header p {
  font-size: 16px;
  color: #666;
}

.module-contents {
  display: flex;
  margin-bottom: 20px;
}

.lessons {
  flex: 2;
  margin-right: 20px;
}

.lesson {
  padding: 20px;
  border: 1px solid #ddd;
  border-radius: 5px;
  background-color: #f9f9f9;
}

.module-list {
  flex: 1;
}

.module-list h2 {
  font-size: 24px;
  margin-bottom: 10px;
}

.module-list ul {
  list-style-type: none;
  padding: 0;
}

.module-list li {
  margin-bottom: 10px;
}

.module-list li a {
  text-decoration: none;
  color: #0072c6;
  font-weight: bold;
}

.module-list li a.active,
.module-list li a:hover {
  text-decoration: underline;
}

.navigation-buttons {
  text-align: center;
  margin-top: 20px;
}

.navigation-buttons button {
  padding: 10px 20px;
  background-color: #0072c6;
  color: #fff;
  border: none;
  cursor: pointer;
  margin: 0 10px;
}

.navigation-buttons button:hover {
  background-color: #005bb5;
}</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>true</has_preview>
        <id>lms_module_content</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {  }]]></link>
        <name>LMS Module Content</name>
        <option_schema>[]</option_schema>
        <public>true</public>
        <roles/>
        <script><![CDATA[(function() {
  data.course = {};
  data.modules = [];

  var courseSysId = $sp.getParameter('sys_id');
  if (!courseSysId) {
    gs.error('No course sys_id provided');
    return;
  }

  // Fetch course details
  var courseGr = new GlideRecord('x_1383177_lms_app_course');
  if (courseGr.get(courseSysId)) {
    data.course.sys_id = courseGr.getValue('sys_id');
    data.course.course_name = courseGr.getValue('course_name');
    data.course.short_description = courseGr.getValue('short_description');
  }

 var courseModuleTable = 'x_1383177_lms_app_m2m_x_1383177_lm_x_1383177_lm';
          var moduleTable = 'x_1383177_lms_app_module';

          var moduleGr = new GlideRecordSecure(courseModuleTable);
          moduleGr.addQuery('x_1383177_lms_app_course', courseSysId); // Adjust field names as per your many-to-many table
          moduleGr.orderBy('order');
          moduleGr.query();

          while (moduleGr.next()) {
            var moduleSysId = moduleGr.getValue('x_1383177_lms_app_module'); // Adjust field names as per your many-to-many table
            var moduleGrDetails = new GlideRecordSecure(moduleTable);
            if (moduleGrDetails.get(moduleSysId)) {
              var moduleObj = {
                name: moduleGrDetails.getValue('name'), // Adjust field names as per your module table
                description: moduleGrDetails.getValue('short_description'), // Adjust field names as per your module table
              };
              data.modules.push(moduleObj);
            }
          }
})();
]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>pranav.k</sys_created_by>
        <sys_created_on>2024-06-04 04:30:39</sys_created_on>
        <sys_id>28f8e24a93a64210b09bf2918bba101e</sys_id>
        <sys_mod_count>26</sys_mod_count>
        <sys_name>LMS Module Content</sys_name>
        <sys_package display_value="LMS Application" source="x_1383177_lms_app">9fa9ee7f93650210b09bf2918bba106b</sys_package>
        <sys_policy/>
        <sys_scope display_value="LMS Application">9fa9ee7f93650210b09bf2918bba106b</sys_scope>
        <sys_update_name>sp_widget_28f8e24a93a64210b09bf2918bba101e</sys_update_name>
        <sys_updated_by>abhishek.s</sys_updated_by>
        <sys_updated_on>2024-06-17 09:17:58</sys_updated_on>
        <template><![CDATA[<div class="module-content-page">
  <div class="module-header">
    <h1>{{c.data.course.course_name}}</h1>
    <p>{{c.data.course.short_description}}</p>
  </div>
  <div class="module-contents">
    <div class="lessons" ng-repeat="module in c.data.modules">
      <div class="lesson" ng-if="c.selectedModule === module.sys_id">
        <h2>{{module.name}}</h2>
        <p ng-bind-html="c.data.module.content_body.value">{{module.description}}</p>
      </div>
      <!-- Add more lessons here -->
    </div>
    <div class="module-list">
      <h2>Module List</h2>
      <ul>
       <li ng-repeat="module in c.data.modules">
          <a href="javascript:void(0)" ng-click="c.selectModule(module.sys_id)" ng-class="{'active': c.selectedModule === module.sys_id}">
            {{module.name}}
          </a>
        </li>
      </ul>
    </div>
  </div>
  <div class="navigation-buttons">
    <button class="prev-lesson">Previous Lesson</button>
    <button class="next-lesson">Next Lesson</button>
  </div>
</div>


]]></template>
    </sp_widget>
</record_update>
