<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[api.controller = function ($location, $scope, $sce, i18n) {
	var c = this;

	// Function to handle post question button click
	c.handlePostQuestion = function () {
		window.location.href = '?id=lms_question';
	};

	// Function to redirect to discussion detail page
	c.redirectToDiscussionDetail = function (sys_id) {
		var portalURL = $location.absUrl().split('?')[0];
		var pageID = 'lms_forum_answers';
		var url = portalURL + '?id=' + pageID + '&sys_id=' + sys_id;
		window.location.href = url;
	};

	// Initialize search parameters and pagination
	c.searchQuery = '';
	c.searchPerformed = false;
	c.searchResultsCount = 0;
	c.currentPage = 1;
	c.itemsPerPage = 6;
	c.pageCount = 0;

	// Function to show all discussions
	c.showAllDiscussions = function () {
		c.filteredDiscussions = c.data.discussions;
		c.updatePagination();
	};

	// Function to handle the search
	c.searchDiscussions = function () {
		c.searchQuery = document.getElementById('searchInput').value;
		if (c.searchQuery.trim() !== '') {
			c.filteredDiscussions = c.data.discussions.filter(function(disc) {
				return disc.question.toLowerCase().includes(c.searchQuery.toLowerCase());
			});
			c.searchResultsCount = c.filteredDiscussions.length;
			c.searchPerformed = true;
		} else {
			c.showAllDiscussions();
			c.searchPerformed = false;
		}
		c.updatePagination();
	};

	c.handleKeyPress = function(event) {
		if (event.keyCode === 13) {
			c.searchDiscussions();
		}
	};

	// Function to update pagination
	c.updatePagination = function () {
		c.pageCount = Math.ceil(c.filteredDiscussions.length / c.itemsPerPage);
		c.paginatedDiscussions = c.filteredDiscussions.slice((c.currentPage - 1) * c.itemsPerPage, c.currentPage * c.itemsPerPage);
	};

	// Function to go to the previous page
	c.prevPage = function () {
		if (c.currentPage > 1) {
			c.currentPage--;
			c.updatePagination();
		}
	};

	// Function to go to the next page
	c.nextPage = function () {
		if (c.currentPage < c.pageCount) {
			c.currentPage++;
			c.updatePagination();
		}
	};

	// Function to calculate time difference
	c.timeSince = function(date) {
			var currentDate = new Date();
    currentDate.setMinutes(currentDate.getMinutes() - 330); // Add 330 minutes to current time
    
    var seconds = Math.floor((currentDate - new Date(date)) / 1000);
    var interval = seconds / 31536000;

			if (interval > 1) return Math.floor(interval) + " year" + (Math.floor(interval) > 1 ? "s" : "") + " ago";
			interval = seconds / 2592000;
			if (interval > 1) return Math.floor(interval) + " month" + (Math.floor(interval) > 1 ? "s" : "") + " ago";
			interval = seconds / 86400;
			if (interval > 1) return Math.floor(interval) + " day" + (Math.floor(interval) > 1 ? "s" : "") + " ago";
			interval = seconds / 3600;
			if (interval > 1) return Math.floor(interval) + " hour" + (Math.floor(interval) > 1 ? "s" : "") + " ago";
			interval = seconds / 60;
			if (interval >= 1) return Math.floor(interval) + " minute" + (Math.floor(interval) > 1 ? "s" : "") + " ago";
			return "just now";
		};
	
	// Call the function to show all discussions
	c.showAllDiscussions();

	if (c.data.discussions && c.data.discussions.detailed_description) {
		c.data.discussions.detailed_description.value = $sce.trustAsHtml(c.data.discussions.detailed_description.value);
	}
};
]]></client_script>
        <controller_as>c</controller_as>
        <css>body {
  margin: 0;
  padding: 0;
  background-color: #e8f0fe;
  font-family: 'Poppins', sans-serif;
}

.forum-page {
  padding: 20px;
  max-width: 1200px;
  margin: 20px auto;
}

.forum-header {
  position: relative;
  text-align: center;
  margin-bottom: 40px;
  padding: 20px;
  background: linear-gradient(45deg, #6fb1fc, #4364f7);
  color: #fff;
  border-radius: 10px;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
  animation: slideIn 0.5s ease-in-out;
}

.forum-header h1 {
  font-size: 2.5em;
  margin-bottom: 10px;
}

.forum-header p {
  font-size: 1.2em;
}

.forum-content {
  gap: 20px; 
}

.discussion-card {
  background: #fff;
  border-radius: 10px;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
  margin-bottom: 20px;
  padding: 20px;
  transition: transform 0.3s, box-shadow 0.3s;
  animation: fadeInUp 0.5s ease-in-out;
}

.discussion-card:hover {
  transform: translateY(-5px);
  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
}

.discussion-title {
  font-size: 1.8em;
  margin-bottom: 10px;
  color: #4364f7;
}

.discussion-excerpt {
  font-size: 1.2em;
  line-height: 1.4; 
  color: #555;
  margin-bottom: 10px;
  max-height: 3.6em; 
  overflow: hidden;
  display: -webkit-box;
  -webkit-line-clamp: 2;
  -webkit-box-orient: vertical;
}

.discussion-footer {
  display: flex;
  justify-content: space-between;
  font-size: 0.9em;
  color: #777;
}



#post-question-btn {
  /*position: absolute;*/
  top: 10px;
  right: 10px;
  background-color: #ffffff;
  color: #007bff;
  margin-right: 534px;
  border: 1px solid #007bff;
  border-radius: .5rem;
  border-color: #007bff;
  padding: 10px 20px;
  border-radius: 5px;
  cursor: pointer;
  font-size: 16px;
  transition: background-color 0.3s, color 0.3s;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

#post-question-btn:hover {
  background-color: #0388fc;
  color: #ffffff;
}

/* Animations */
@keyframes slideIn {
  from {
    opacity: 0;
    transform: translateY(-100%);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fadeInRight {
  from {
    opacity: 0;
    transform: translateX(20px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

.forum-search {
  display: flex;
  justify-content: center;
  margin-bottom: 20px;
}


.forum-search input[type="text"] {
  width: 300px;
  padding: 10px;
  border: 1px solid #ccc;
  border-radius: 5px;
  transition: width 0.3s ease;
}

.forum-search input[type="text"]:focus {
  width: 400px; /* Expand the width on focus */
}
/* Animation for search input */
@keyframes inputFocus {
  0% {
    transform: scaleX(1);
  }
  50% {
    transform: scaleX(1.05);
  }
  100% {
    transform: scaleX(1);
  }
}
.forum-search input[type="text"]:focus {
  animation: inputFocus 0.5s ease;
}

.forum-search button {
  padding: 10px 20px;
  border: 1px solid #ccc;
  border-left: 0;
  border-radius: .5rem .5rem .5rem .5rem;
  background-color: #4364f7;
  color: #fff;
  font-size: 16px;
  cursor: pointer;
  transition: background-color 0.3s;
}

.forum-search button:hover {
  background-color: #6fb1fc;
}

.search-results {
  text-align: center;
  margin-bottom: 20px;
}

.pagination {
  display: flex;
  justify-content: center;
  align-items: center;
  margin-top: 20px;
}

.pagination button {
  padding: 10px 20px;
  margin: 0 10px;
  border: 1px solid #ccc;
  background-color: #4364f7;
  color: #fff;
  cursor: pointer;
  border-radius: 5px;
  transition: background-color 0.3s;
}

.pagination button:disabled {
  background-color: #ccc;
  cursor: not-allowed;
}

.pagination button:hover:not(:disabled) {
  background-color: #6fb1fc;
}

.pagination span {
  font-size: 16px;
}

.discussion-footer {
  display: flex;
  justify-content: space-between;
  font-size: 0.9em;
  color: #777;
}

.discussion-replies {
  font-size: 0.9em;
  color: #777;
}</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>true</has_preview>
        <id>lms_discussion_forum</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {  }]]></link>
        <name>LMS Discussion Forum</name>
        <option_schema/>
        <public>true</public>
        <roles/>
        <script><![CDATA[(function () {
	data.discussions = [];

	var grDiscussion = new GlideRecord('x_1383177_lms_app_discussion');
	grDiscussion.orderByDesc('sys_updated_on'); 
	grDiscussion.query();

	while (grDiscussion.next()) {
		var questionBy = grDiscussion.getValue('question_by');
		var userName = '';

		// Fetch the user's name from sys_user table using the sys_id
		if (questionBy) {
			var grUser = new GlideRecord('sys_user');
			if (grUser.get(questionBy)) {
				userName = grUser.getValue('name');
			}
		}

		// Fetch the count of replies for the current discussion
		var grReplies = new GlideAggregate('x_1383177_lms_app_forum_answers');
		grReplies.addQuery('question_ref', grDiscussion.getUniqueValue());
		grReplies.addAggregate('COUNT');
		grReplies.query();
		var repliesCount = 0;
		if (grReplies.next()) {
			repliesCount = grReplies.getAggregate('COUNT');
		}

		data.discussions.push({
			question: grDiscussion.getValue('question'),
			detailed_description: grDiscussion.getValue('detailed_description'),
			question_by: userName, 
			sys_id: grDiscussion.getUniqueValue(),
			replies_count: repliesCount,
			created_on: grDiscussion.getValue('sys_created_on')
		});
	}

	if (input) {

	}
})();
]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>pranav.k</sys_created_by>
        <sys_created_on>2024-06-04 04:44:36</sys_created_on>
        <sys_id>852c2e4a93a64210b09bf2918bba10f9</sys_id>
        <sys_mod_count>110</sys_mod_count>
        <sys_name>LMS Discussion Forum</sys_name>
        <sys_package display_value="LMS Application" source="x_1383177_lms_app">9fa9ee7f93650210b09bf2918bba106b</sys_package>
        <sys_policy/>
        <sys_scope display_value="LMS Application">9fa9ee7f93650210b09bf2918bba106b</sys_scope>
        <sys_update_name>sp_widget_852c2e4a93a64210b09bf2918bba10f9</sys_update_name>
        <sys_updated_by>pranav.k</sys_updated_by>
        <sys_updated_on>2024-07-24 19:18:18</sys_updated_on>
        <template><![CDATA[<div class="forum-page">
  <div class="forum-header">
    <h1>${Discussion Forum}</h1>
    <p>${Engage in conversations, ask questions, and share knowledge with your peers.}</p>
    
  </div>

  <div class="forum-search">
         <button ng-click="c.handlePostQuestion()" id="post-question-btn">${Post your Question}</button>
    <input type="text" ng-keypress="c.handleKeyPress($event)" id="searchInput" placeholder="Search for discussions..." />
    <button ng-click="c.searchDiscussions()">${Search}</button>
  </div>

  <div class="forum-content">
    <div class="search-results" ng-if="c.searchPerformed">
      <h2>${Search Results for "{{c.searchQuery}}"}</h2>
      <p>{{c.searchResultsCount}} ${result(s) found.}</p>
    </div>

    <div class="discussion-card" ng-click="c.redirectToDiscussionDetail(disc.sys_id)" ng-repeat="disc in c.paginatedDiscussions">
      <h2 class="discussion-title" ng-bind="disc.question"></h2>
      <p class="discussion-excerpt" ng-bind-html="disc.detailed_description"></p>
      <div class="discussion-footer">
        <span class="discussion-author">${Posted by: }<span ng-bind="disc.question_by"></span></span>
        <span class="discussion-time" ng-bind="c.timeSince(disc.created_on)"></span>
        <span class="discussion-replies">{{disc.replies_count}} ${Replies}</span>
      </div>
    </div>

    <div class="pagination" ng-if="c.pageCount > 1">
      <button ng-click="c.prevPage()" ng-disabled="c.currentPage === 1">${Previous}</button>
      <span>${Page} {{c.currentPage}} ${of} {{c.pageCount}}</span>
      <button ng-click="c.nextPage()" ng-disabled="c.currentPage === c.pageCount">${Next}</button>
    </div>
  </div>
</div>
]]></template>
    </sp_widget>
</record_update>
